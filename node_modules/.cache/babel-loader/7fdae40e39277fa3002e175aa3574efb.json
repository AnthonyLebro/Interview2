{"ast":null,"code":"var _jsxFileName = \"/home/anthony/Bureau/Fakeflix_React/src/containers/movies/moviesView.jsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, FormControl, Grid, InputLabel, MenuItem, Select } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport MultiSelect from '../../components/MultiSelect';\nimport Pagination from '../../components/Pagination';\nimport MoviesCard from './moviesCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  flex: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    alignItem: 'center'\n  },\n  select: {\n    margin: '16px !important',\n    maxWidth: '30vw',\n    minWidth: '250px !important'\n  }\n}));\n\nconst MoviesView = _ref => {\n  _s();\n\n  let {\n    movies,\n    getMovies\n  } = _ref;\n  const classes = useStyles();\n  const [stateMovies, setStateMovies] = useState([]);\n  const [moviesFilter, setMoviesFilter] = useState([]);\n  const [moviesCount, setMoviesCount] = useState(12);\n  const [page, setPage] = useState(1);\n\n  const handleClick = id => {\n    let categoryDelete = stateMovies.filter(e => e.id === id)[0].category;\n\n    if (moviesFilter.includes(categoryDelete) && stateMovies.filter(e => e.category === categoryDelete).length === 1) {\n      setMoviesFilter(moviesFilter.filter(e => e !== categoryDelete));\n    }\n\n    setStateMovies(stateMovies.filter(e => e.id !== id));\n  };\n\n  useEffect(() => {\n    if (stateMovies.length === 0) {\n      getMovies();\n      setStateMovies(Object.values(movies));\n    }\n  }, [getMovies, movies, stateMovies]);\n  const filterMovies = useMemo(() => {\n    if (moviesFilter.length > 0) {\n      return stateMovies.filter(i => moviesFilter.includes(i.category));\n    }\n\n    return stateMovies;\n  }, [moviesFilter, stateMovies]);\n  const filterPage = useMemo(() => {\n    if (moviesCount < filterMovies.length) {\n      return filterMovies.slice((page - 1) * moviesCount, moviesCount * page);\n    }\n\n    return filterMovies;\n  }, [moviesCount, page, filterMovies]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.flex,\n      children: [/*#__PURE__*/_jsxDEV(MultiSelect, {\n        multiSelect: [{\n          title: 'Filtrer film par catÃ©gorie',\n          list: Array.from(new Set(stateMovies.map(m => m.category))),\n          state: [moviesFilter, setMoviesFilter]\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        className: classes.select,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"Movies Count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"simple-select-label\",\n          id: \"simple-select\",\n          value: moviesCount,\n          label: \"Movies Count\",\n          onChange: e => {\n            setMoviesCount(e.target.value);\n            setPage(1);\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 4,\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 8,\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 12,\n            children: \"12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), stateMovies.length > moviesCount && /*#__PURE__*/_jsxDEV(Pagination, {\n        page: page,\n        next: () => setPage(page + 1),\n        prev: () => setPage(page - 1),\n        pageMax: Math.ceil(filterMovies.length / moviesCount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.grid,\n      children: filterPage.map(movie => /*#__PURE__*/_jsxDEV(MoviesCard, {\n        movie: movie,\n        handleClick: () => handleClick(movie.id)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MoviesView, \"3YG6Dk3gIiKYPmsK9gtnod3XD00=\", false, function () {\n  return [useStyles];\n});\n\n_c = MoviesView;\nMoviesView.propTypes = {\n  movies: PropTypes.array.isRequired\n};\nexport default MoviesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesView\");","map":{"version":3,"sources":["/home/anthony/Bureau/Fakeflix_React/src/containers/movies/moviesView.jsx"],"names":["makeStyles","Container","FormControl","Grid","InputLabel","MenuItem","Select","PropTypes","React","useEffect","useMemo","useState","MultiSelect","Pagination","MoviesCard","useStyles","theme","grid","display","flexWrap","justifyContent","flex","alignItem","select","margin","maxWidth","minWidth","MoviesView","movies","getMovies","classes","stateMovies","setStateMovies","moviesFilter","setMoviesFilter","moviesCount","setMoviesCount","page","setPage","handleClick","id","categoryDelete","filter","e","category","includes","length","Object","values","filterMovies","i","filterPage","slice","title","list","Array","from","Set","map","m","state","target","value","Math","ceil","movie","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport { Container, FormControl, Grid, InputLabel, MenuItem, Select } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport MultiSelect from '../../components/MultiSelect';\nimport Pagination from '../../components/Pagination';\nimport MoviesCard from './moviesCard';\n\nconst useStyles = makeStyles(theme => ({\n\tgrid: {\n\t\tdisplay: 'flex',\n\t\tflexWrap: 'wrap',\n\t\tjustifyContent: 'center'\n\t},\n\tflex: {\n\t\tdisplay: 'flex',\n\t\tflexWrap: 'wrap',\n\t\tjustifyContent: 'space-around',\n\t\talignItem: 'center'\n\t},\n\tselect: {\n\t\tmargin: '16px !important',\n\t\tmaxWidth: '30vw',\n\t\tminWidth: '250px !important'\n\t}\n}));\n\t\nconst MoviesView = ({ movies, getMovies }) => {\n\tconst classes = useStyles();\n\tconst [stateMovies, setStateMovies] = useState([]);\n\tconst [moviesFilter, setMoviesFilter] = useState([]);\n\tconst [moviesCount, setMoviesCount] = useState(12);\n\tconst [page, setPage] = useState(1);\n\n\tconst handleClick = id => {\n\t\tlet categoryDelete = stateMovies.filter(e => e.id === id)[0].category;\n\t\tif (moviesFilter.includes(categoryDelete) && stateMovies.filter(e => e.category === categoryDelete).length === 1) {\n\t\t\tsetMoviesFilter(moviesFilter.filter(e => e !== categoryDelete));\n\t\t}\n\t\tsetStateMovies(stateMovies.filter(e => e.id !== id))\n\t};\n\n\tuseEffect(() => {\n\t\tif (stateMovies.length === 0) {\n\t\t\tgetMovies();\n\t\t\tsetStateMovies(Object.values(movies));\n\t\t}\n\t}, [getMovies, movies, stateMovies]);\n\n\tconst filterMovies = useMemo(() => {\n\t\tif (moviesFilter.length > 0) {\n\t\t\treturn stateMovies.filter(i => moviesFilter.includes(i.category))\n\t\t}\n\t\treturn stateMovies\n\t}, [moviesFilter, stateMovies]);\n\n\tconst filterPage = useMemo(() => {\n\t\tif (moviesCount < filterMovies.length) {\n\t\t\treturn filterMovies.slice((page - 1) * moviesCount, moviesCount * page);\n\t\t}\n\t\treturn filterMovies;\n\t}, [moviesCount, page, filterMovies]);\n\n\treturn (\n\t\t<Container maxWidth=\"xl\">\n\t\t\t<Grid className={classes.flex}>\n\t\t\t\t<MultiSelect\n\t\t\t\t\tmultiSelect={[{\n\t\t\t\t\t\ttitle: 'Filtrer film par catÃ©gorie',\n\t\t\t\t\t\tlist: Array.from(new Set(stateMovies.map(m => m.category))),\n\t\t\t\t\t\tstate: [moviesFilter, setMoviesFilter]\n\t\t\t\t\t}]}\n\t\t\t\t/>\n\n\t\t\t\t<FormControl fullWidth className={classes.select}>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">Movies Count</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"simple-select-label\"\n\t\t\t\t\t\tid=\"simple-select\"\n\t\t\t\t\t\tvalue={moviesCount}\n\t\t\t\t\t\tlabel=\"Movies Count\"\n\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\tsetMoviesCount(e.target.value);\n\t\t\t\t\t\t\tsetPage(1);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value={4}>4</MenuItem>\n\t\t\t\t\t\t<MenuItem value={8}>8</MenuItem>\n\t\t\t\t\t\t<MenuItem value={12}>12</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\n\t\t\t\t{stateMovies.length > moviesCount && (\n\t\t\t\t\t<Pagination\n\t\t\t\t\t\tpage={page}\n\t\t\t\t\t\tnext={() => setPage(page + 1)}\n\t\t\t\t\t\tprev={() => setPage(page - 1)}\n\t\t\t\t\t\tpageMax={Math.ceil(filterMovies.length / moviesCount)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Grid>\n\n\n\t\t\t<Grid className={classes.grid}>\n\t\t\t\t{filterPage.map(movie => (\n\t\t\t\t\t<MoviesCard\n\t\t\t\t\t\tkey={movie.id}\n\t\t\t\t\t\tmovie={movie}\n\t\t\t\t\t\thandleClick={() => handleClick(movie.id)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Grid>\n\n\t\t</Container>\n\t);\n};\n\nMoviesView.propTypes = {\n\tmovies: PropTypes.array.isRequired\n};\n\nexport default MoviesView;"]},"metadata":{},"sourceType":"module"}